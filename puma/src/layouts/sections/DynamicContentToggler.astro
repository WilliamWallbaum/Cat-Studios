---
import Button from "@components/Button.astro";
import TwoPanelLeft from "@layouts/sections/TwoPanel.astro";
import { Icon } from 'astro-icon';
const { sectId="resume-container", pannelClass = [], colOneClass = [], colTwoClass = [], title = "Section Title"} = Astro.props
const sectionClasses = ["c-13",...pannelClass];
const colOneClasses = [...colOneClass];
const colTwoClasses = [...colTwoClass];

// resume information
import json from "../../assests/BillWallbaum.json";
const { about, education, work_history, skills, certifications } = json;
---

<TwoPanelLeft sectId={sectId} sectionClass={sectionClasses} colOneClass = {colOneClasses} colTwoClass={colTwoClasses}>
    <header class="section-header" slot="intro">
        <h2>{title}</h2>
        <slot/>
    </header>
    <!-- Start Column 1 -->
    <!-- Button Container 1 -->
    <div id="button-container-1a" class="button-container" slot="left-col">
        <Button dataContentId="work-history">Work History</Button>
        <div class="sub-button-jobs">
            {work_history.map((job)=> (
                <Button
                id={`${job.id}-button`}
                title={job.employer.name}
                dataContentId="work-history"
                dataSubContent={`${job.id}-info`}
                >
                    <Icon
                    class="logo"
                    name={job.employer.logo.name}
                    alt={job.employer.logo.alt}
                    />
                </Button>
            ))}
        </div>
    </div>
    
    <!-- Button Container 2 -->
    <div id="button-container-2a" class="button-container" slot="left-col">
        <Button dataContentId="education">Education</Button>
        <div class="sub-button-2a">
            {education.map((school)=> (
                <Button
                id={`${school.id}-button`}
                title={school.institution}
                dataContentId="education"
                dataSubContent={`${school.id}-info`}
                >
                    <Icon
                    class="logo"
                    name={school.logo.name}
                    alt={school.logo.alt}
                    />
                </Button>
            ))}
        </div>
    </div>
    
    <!-- Button Container 3 -->
    <div id="button-container-3a" class="button-container" slot="left-col">
        <Button dataContentId="skills">Skills</Button>
        <div class="sub-button-3a">
            {skills.map((skill)=> (
                <Button
                id={`${skill.id}-button`}
                title={skill.institution}
                dataContentId="skills"
                dataSubContent={`${skill.id}-info`}
                >
                    <Icon
                    class="logo"
                    name={skill.logo.name}
                    alt={skill.logo.alt}
                    />
                </Button>
            ))}
        </div>
    </div>
    <!-- End Column 1 -->
  
    <!-- Start Column 2 -->
    <!-- Start Work History-->
    <article id="work-history" class="content opacity-1" slot="right-col">
        <h2 data-content-id="work-history">Work History</h2> 
        {work_history.map((job, index) => (
            <div id={`${job.id}-title-card`} class="title-card">
                
                <figure id={`${job.id}-logo`} title={job.employer.name}>
                    <Icon class="logo" name={job.employer.logo.name} alt={job.employer.logo.alt}/>
                </figure>
                
                <div id="job-card" class="job" data-content-id="work-history" data-job-id={job.id}>
                    <h4 class="job-employer">
                        {job.employer.name}
                    </h4>
                    <ul class="job-positions">
                        {job.job_title.map((key) => (
                            <li class="job-position">
                                {key}
                            </li>
                        ))}
                    </ul>
                </div>
            </div>

            <div id={`${job.id}-info`} class="sub-content opacity-0">
                <p>{job.employment_type} | {job.start_date} - {job.end_date} | {job.duration}</p>
                <p><small>{job.location}</small></p>
                <ul class="job-duties"> 
                    {job.responsibilities.map((duty) => (
                        <li class="job-responsibilities">
                            {duty}
                        </li>
                    ))}
                </ul>
            </div>
        ))}   
    </article>
    <!-- End Work History-->

    <!-- Start Education -->
    <article id="education" class="content opacity-0" slot="right-col">
        <h2 data-content-id="education">Education</h2>
        {education.map((school) => (
            <div id={`${school.id}-title-card`} class="title-card">
                <figure id={`${school.id}-logo`} title={school.institution}>
            <Icon class="logo" name={school.logo.name} alt={school.logo.alt}/>
                </figure>

                <div id={`${school.id}-info`}>
                    <h4 id={`${school.id}-title`}>{school.institution}</h4>
                    <p>{school.area} · {school.studyType}</p>
                </div>
            </div>
        ))}
    </article>
    <!-- End Education-->

    <!-- Start Skills-->
    <article id="skills" class="content opacity-0" slot="right-col">
        <h2 data-content-id="skills">Skills</h2>
        {skills.map((skill) => (
            <div id={`${skill.id}-title-card`} class="title-card">
                <figure id={`${skill.id}-logo`} title={skill.institution}>
                    <Icon class="logo" name={skill.logo.name} alt={skill.logo.alt}/>
                </figure>

                <div id={`${skill.id}-info`}>
                    <h4 id={`${skill.id}-title`}>{skill.institution}</h4>
                    <p>{skill.area} · {skill.studyType}</p>
                </div>
            </div>
        ))}
    </article>
    <!-- End Skills-->
  <!-- End Column 2 -->
</TwoPanelLeft>

<script>
  // JavaScript code to handle button clicks and show/hide content elements
const opacityChange = (
  containerSelector,
  activeContentSelector,
  activeSubContentSelector
) => {
  const containerCol = document.querySelector(containerSelector);
  const colContent = containerCol.querySelectorAll(".content, .sub-content");

  colContent.forEach((container) => {
    const isActiveContent =
      container.id === activeContentSelector ||
      container.id === activeSubContentSelector;

    container.classList.toggle("opacity-1", isActiveContent);
    container.classList.toggle("opacity-0", !isActiveContent);
  });
};

// Store references to the containers
const col1Container = document.querySelector(".col-1");
const col2Container = document.querySelector(".col-2");

// Function to handle button clicks
const handleButtonClick = (event, containerSelector) => {
  const targetButton = event.target.closest("button");

  if (targetButton) {
    const contentId = targetButton.getAttribute("data-content-id");
    const subContentId = targetButton.getAttribute("data-sub-content-id");

    opacityChange(containerSelector, contentId, subContentId || contentId);
  }
};

// Event listeners using event delegation
col1Container.addEventListener("click", (event) => {
  handleButtonClick(event, ".col-2");
});

col2Container.addEventListener("click", (event) => {
  handleButtonClick(event, ".col-2");
});

</script>

<style lang="scss">
div,
article {
  display: grid;
  grid-gap: var(--global-s1);
}

[class^="col-"] {
  outline: 1px solid;
  padding: var(--global-s1);
  transition: all 0.25s ease;
}

.button-container {
  padding: 0.5rem 0;
}

.content {
  text-align: center;
  padding: var(--global-s1) 0;
}

[class^="sub-button-"],
.sub-button {
  grid-template-columns: repeat(auto-fit, minmax(25%, 1fr));
}

.opacity-0 {
  display: none;
  opacity: 0;
}

.opacity-1 {
  display: grid;
  opacity: 1;
}

.col-2:has(#work-history.opacity-1) {
  background-color: var(--primary-color);
  color: var(--white-3);
}

.col-2:has(#content-2.opacity-1) {
  background-color: var(--secondary-color);
  color: var(--white-3);
}

.col-2:has(#content-3.opacity-1) {
  background-color: var(--byzantium);
  color: var(--white-3);
}
.title-card {
  display: grid;
  grid-template-columns: 1fr 5fr;
  grid-template-areas: "image info";
  gap: var(--global-s1);
  align-items: center;
  background-color: var(--primary-text-color);
  color: var(--white-5);

  [id$="-info"] {
    grid-area: info;
  }
}

/* Mobile-friendly styles */
@media (max-width: 768px) {
  section {
    grid-template-columns: 1fr;
  }

  [class^="col-"] {
    padding: calc(var(--global-s1) * 0.5);
  }

  .sub-button,
  [class^="sub-button-"] {
    grid-template-columns: repeat(auto-fit, minmax(100px, 1fr));
    grid-gap: var(--global-s1);
  }
}
</style>