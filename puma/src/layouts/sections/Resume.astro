---
import Button from "@components/Button.astro";
import TwoPanelLeft from "@layouts/sections/TwoPanel.astro";
import { Icon } from 'astro-icon';
const { sectId="resume-container", pannelClass = [], colOneClass = [], colTwoClass = [], title = "Section Title"} = Astro.props
const sectionClasses = ["c-13",...pannelClass];
const colOneClasses = [...colOneClass];
const colTwoClasses = [...colTwoClass];

// resume information
import json from "../../assests/BillWallbaum.json";
const { about, education, work_history, skills, certifications } = json;
---

<TwoPanelLeft sectId={sectId} sectionClass={sectionClasses} colOneClass = {colOneClasses} colTwoClass={colTwoClasses}>
    <header class="section-header" slot="intro">
        <h2>{title}</h2>
        <slot/>
    </header>
    <!-- Start Column 1 -->
    <!-- Button Container 1 -->
    <div class="button-container" slot="left-col">
        <Button dataContentId="work-history" className="transparent">Work History</Button>
        <div class="sub-button-jobs">
            {work_history.map((job)=> (
                <Button
                id={`${job.id}-button`}
                title={job.employer.name}
                dataContentId="work-history"
                dataSubContent={`${job.id}-info`}
                className="transparent"
                >
                    <Icon
                    class="logo"
                    name={job.employer.logo.name}
                    alt={job.employer.logo.alt}
                    />
                </Button>
            ))}
        </div>
    </div>
    
    <!-- Button Container 2 -->
    <div class="button-container" slot="left-col">
        <Button dataContentId="education" className="transparent">Education</Button>
        <div class="sub-button-2a">
            {education.map((school)=> (
                <Button
                id={`${school.id}-button`}
                title={school.institution}
                dataContentId="education"
                dataSubContent={`${school.id}-info`}
                className="transparent"
                >
                    <Icon
                    class="logo"
                    name={school.logo.name}
                    alt={school.logo.alt}
                    />
                </Button>
            ))}
        </div>
    </div>
    
    <!-- Button Container 3 -->
    <div class="button-container" slot="left-col">
        <Button dataContentId="skills" className="transparent">Skills</Button>
        <div class="sub-button-3a">
            {skills.map((skill)=> (
                <Button
                id={`${skill.id}-button`}
                title={skill.id}
                dataContentId="skills"
                dataSubContent={`${skill.id}-info`}
                className="transparent"
                >
                    <Icon
                    class="logo"
                    name={skill.logo.name}
                    alt={skill.logo.alt}
                    />
                </Button>
            ))}
        </div>
    </div>
    <!-- End Column 1 -->
  
    <!-- Start Column 2 -->
    <!-- Start Work History-->
    <article id="work-history" class="content opacity-1" slot="right-col">
        <h2 data-content-id="work-history">Work History</h2> 
        {work_history.map((job) => (
            <div id={`${job.id}-title-card`} class="title-card" data-content-id="work-history" data-job-id={job.id}>
                
                <figure id={`${job.id}-logo`} title={job.employer.name}>
                    
                <Button
                id={`${job.id}-button`}
                title={job.employer.name}
                dataContentId="work-history"
                dataSubContent={`${job.id}-info`}
                className="transparent"
                >
                    <Icon
                    class="logo"
                    name={job.employer.logo.name}
                    alt={job.employer.logo.alt}
                    />
                </Button>
                </figure>
                
                <div id="job-card" class="job" data-content-id="work-history" data-job-id={job.id}>
                    <h4 class="job-employer">
                        {job.employer.name}
                    </h4>
                    <ul class="job-positions">
                        {job.job_title.map((key) => (
                            <li class="job-position">
                                {key}
                            </li>
                        ))}
                    </ul>
                </div>
            </div>

            <div id={`${job.id}-info`} class="sub-content opacity-0">
                <p>{job.employment_type} | {job.start_date} - {job.end_date} | {job.duration}</p>
                <p><small>{job.location}</small></p>
                <ul class="job-duties"> 
                    {job.responsibilities.map((duty) => (
                        <li class="job-responsibilities">
                            {duty}
                        </li>
                    ))}
                </ul>
            </div>
        ))}   
    </article>
    <!-- End Work History-->

    <!-- Start Education -->
    <article id="education" class="content opacity-0" slot="right-col">
        <h2 data-content-id="education">Education</h2>
        {education.map((school) => (
            <div id={`${school.id}-title-card`} class="title-card">
                <figure id={`${school.id}-logo`} title={school.institution}>
                    <Icon class="logo" name={school.logo.name} alt={school.logo.alt}/>
                </figure>

                <div id={`${school.id}-info`}>
                    <h4 id={`${school.id}-title`}>{school.institution}</h4>
                    <p>{school.area} Â· {school.studyType}</p>
                </div>
            </div>
        ))}
    </article>
    <!-- End Education-->

    <!-- Start Skills-->
    <article id="skills" class="content opacity-0" slot="right-col">
        <h2 data-content-id="skills">Skills</h2>
        {skills.map((skill) => (
            <div id={`${skill.id}-title-card`} class="title-card">
                <figure id={`${skill.id}-logo`} title={skill.id}>
                    <Icon class="logo" name={skill.logo.name} alt={skill.logo.alt}/>
                </figure>

                <div id={`${skill.id}-info`}>
                    <h4 id={`${skill.id}-title`}>{skill.id}</h4>
                </div>
            </div>
        ))}
    </article>
    <!-- End Skills-->
  <!-- End Column 2 -->
</TwoPanelLeft>

<script>
 import { initializeDynamicToggler } from "src/scripts/dynamicToggler.js";
  // Store references to the containers
  const col1Container = document.querySelector(".col-1");
  const col2Container = document.querySelector(".col-2");

  // Initialize dynamic toggler
  initializeDynamicToggler(col1Container, col2Container);
</script>

<style lang="scss">

        
    div,
    article {
        display: grid;
        grid-gap: var(--global-s1);
        h2 {
            color: var(--white-7);
        }
    }
    .section-header p {
            margin: 0;
    }
    .button-container {
        background-color: var(--black-6);
        border-radius:var(--global-radius);
        padding:calc(var(--global-s1)*.1);
        button {
            color: var(--white-5);
            font-size: calc(var(--base-text)*1.7);
        }
    }
    .logo {
        fill: var(--white-5);
        transition: transform 0.3s ease;
    }
    .logo:hover {
        fill: var(--white-7);
        transform: scale(1.1); /* Adjust the scale factor as needed */
    }
    
    [class^="sub-button-"],
    .sub-button {
        grid-template-columns: repeat(auto-fit, minmax(25%, 1fr));
        button{
            padding:var(--global-s1);
            svg {
                max-height: calc(var(--global-s1) * 6);
            }
        }
    }

    .opacity-0 {
        display: none;
        opacity: 0;
    }

    .opacity-1 {
        display: grid;
        opacity: 1;
    }

    .title-card {
        display: grid;
        grid-template-columns: 1fr 5fr;
        grid-template-areas: "image info";
        gap: var(--global-s1);
        align-items: center;
        background-color: var(--black-6);
        border-radius: var(--global-radius);
        color: var(--white-5);
        h4 {
            font-size: calc(var(--base-text)*2);
            color: transparent;
            -webkit-text-stroke-width: 1px;
            -webkit-text-stroke-color: var(--primary-text-color);
        }
        figure {
            display: grid;
            justify-items: center;
            padding:var(--global-s1);
            button{
                hight:100%;
                width:100%;
            }
            svg {
                max-height: calc(var(--global-s1) * 8);
            }
        }

    }

    .job {
        grid-gap: calc(var(--global-s1)*.5);
    }

    [id$="-info"] {
        background-color: var(--black-7);
        margin: calc(var(--global-s1) * -1) 0 0;
        padding: var(--global-s1) var(--global-s2);
    }

    /* Mobile-friendly styles */
    @media (max-width: 768px) {
    section {
        grid-template-columns: 1fr;
    }

    [class^="col-"] {
        padding: calc(var(--global-s1) * 0.5);
    }

    .sub-button,
    [class^="sub-button-"] {
        grid-template-columns: repeat(auto-fit, minmax(100px, 1fr));
        grid-gap: var(--global-s1);
    }
    }
</style>