/* global.scss */
:root {
  /* Sets global variables */
    @supports (color: color(display-p3 0 0 0)) {
    // Define color variables using OKLCH values
    --primary-color: oklch(43% 0.15 125);
    --secondary-color: oklch(43% 0.15 172.23);
    --tertiary-color: oklch(57% 0.107 194.29);
    --byzantium: oklch(37.4% 0.107 293.8);
    --red: oklch(43% 0.15 35.8);
    --yellow: oklch(94.8% 0.15 93);
  }

  @supports not (color: color(display-p3 0 0 0)) {
    // Define color variables using HSL values
    --primary-color: hsl(75.42 100% 18%);
    --secondary-color: hsl(167.56 100% 18%);
    --tertiary-color: hsl(179.77 100% 27%);
    --byzantium: hsl(257.19 39% 32%);
    --red: hsl(14.96 100% 28%);
    --yellow: hsl(45.88 100% 85%);
  }

  --primary-font: 'Raleway', sans-serif;
  --code-font: 'IBM Plex Mono', monospace;
  --base-text: 1rem;
  --global-line-height: 1.5;

  --global-s1: 1rem;
  --global-s2: calc(var(--global-s1) * 2);
  --global-s3: calc(var(--global-s1) * 3);
  --global-s4: calc(var(--global-s1) * 4);

  --animation-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);
  --animation-duration: 1s;
  --global-radius: 0.2rem;
  --global-shadow: calc(var(--global-s1) * 0.4) calc(var(--global-s1) * 0.4)
    calc(var(--global-s1) * 0.5) var(--black-5);

  // Generate variations of black
  @for $i from 1 to 10 {
    $percentage: 10% * $i;
    --black-#{$i}: oklch(0% 0 0 / #{$percentage});
  }
  --black: oklch(0% 0 0);
  // Generate variations of white
  @for $i from 1 to 10 {
    $percentage: 10% * $i;
    --white-#{$i}: oklch(100% 0 0 / #{$percentage});
  }
  --white: oklch(100% 0 0 / 90%);


  @media (prefers-color-scheme: dark) {
    --primary-text-color: oklch(100% 0 0 / 20%);
    --primary-background-color: oklch(0% 0 0 / 50%);
  }

  @media (prefers-color-scheme: light) {
    --primary-text-color: oklch(0% 0 0 / 30%);
    --primary-background-color: oklch(0% 0 0 / 10%);
  }
}
